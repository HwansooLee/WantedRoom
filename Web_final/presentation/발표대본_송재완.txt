발표대본

안녕하세요 발표자 송재완 입니다.

지금부터 spring framework를 사용한 프로젝트 wanted room에 대한 발표를 시작하겠습니다.

발표는 개발배경 및 개발도구, 개발 일정과 차트, 주요기술소개 및 시연, 개발 후기 순으로 진행하도록 하겠습니다.

개발 배경 및 개발도구입니다.

개발하게된 동기는 방구하기에 있어 많은 정보를 얻기가 쉽지 않아 어려운 경우가 많은데
실제 동네 사람들과의 소통과 실제 방의 정보들을 한번에 얻을수 있는 웹서비스를 개발하고 싶어서 만들게 되었습니다.

wanted room project의 개발 목표는 다음과 같이 잡았습니다.

git의 사용을 통한 분업화된 팀프로젝트를 해보는것,
동기방식과 비동기 방식의 차이와 이를 활용한 개발 경험을 쌓는것,
스프링 프레임 워크, MVC2패턴을 이해하고 이를 사용한 개발 경험을 쌓는것,
클라이언트 - 서버의 흐름을 정확히 이해하는것,
웹 프로젝트에 있어서 중요한 부분인 보안적인 측면을 고려하여 개발하는 경험을 쌓는것,
다양한 라이브러리를 사용해 원하는 기능을 구현해보는 경험을 쌓는것,
인공지능의 활용과 고객이 그 결과물을 쉽게 확인할수 있게 시각화시키는 경험을 쌓는것,
API를 사용하는 방법을 숙지하는것 입니다.

개발도구로는 
클라이언트에게서 요청을 받을 웹브라우저로는 크롬을 사용했고,
서버는 Tomcat V8.5를 사용했습니다.

또 메인으로 사용한 도구는 Spring V3.9를 사용해
그 안에서 java 1.8버전, javascript, jquery, ajax등을 사용해 구현을 했습니다.

그리고 데이터 분석과 가공을 위한 도구로는 Python V3.9를 사용했습니다.

DB는 oracle 11g를 사용했고 DB자원을 관리할 도구로는 mybatis 프레임 워크를 사용했습니다.

마지막으로 이 모든 소스를 관리하고 분업을위한 도구로 git을 사용했습니다.


다음은 개발 일정과 차트입니다.

개발은 6/27일 부터 약 한달간
개발주제선정, 요구사항정리표,ERD등의 차트작성, 그리고 인터페이스 설계, 개발 , 문서작업순으로
진행했습니다.

요구사항정리표에서는 크게 회원파트와 매물파트로 나누었습니다.
회원 파트에서는 회원가입, 로그인, 게시글 작성, 댓글 작성등에 대한 부분을 정리했고,
매물 파트에서는 매물의 등록, 매물의 검색, 매물 상세보기등에 대한 부분을 정리했습니다.

그리고 이를 토대로 ERD를 그려 개체간 관계를 파악한뒤
테이블 명세서를 작성후 이를 토대로 테이블쿼리를 만들었습니다.

또 usecase diagram을 그려 비회원과, 회원, 공인중개사 회원의 권한을 구분해주고
이를 토대로 전체적인 인터페이스를 설계한뒤 조원 각자 파트를 맡아 분업으로 개발을 진행했습니다.

이제 주요기술 소개를 해드리겠습니다.

먼저 홈화면입니다.
홈화면에서는 화면 가운데에 검색창과 지도를 배치해 원하는 위치를 골라
검색할수 있도록 만들었습니다. 마우스를 사용해 지도를 줌인 줌아웃할수 있고 바뀌는 위치에 따라
검색창의 주소도 자동으로 바뀔수 있도록 구현했습니다.
또 오른쪽 상단에 햄버거버튼을 만들어 메뉴를 볼수있게 만들었고
메뉴는 로그인시와 비로그인시에 구성이 다르게 구현했습니다.
홈화면에서 소개해드릴 주요기능은 현재위치정보를 가져오는 기술입니다.
https 환경에서 개발이되었다면 그냥 localhost로 접속하는것이 아닌 다른 아이피에서 접근도 
geolocation 함수를 통해 클라이언트에게 위치정보동의를 받아 간단히 구현할수 있었겠지만
http환경에서 개발을 진행했기때문에 다른 방법을 찾아봐야 했습니다.
그 과정에서 생각해낸 방법이 http환경을 https로 바꾸는 방법과 
현재 접속한 클라이언트의 공인아이피를 받아 그 공인아이피를 좌표로 변환하고
좌표를 통해 위치를 잡는 방법 두가지였는데 둘 다 시도해본결과 현재의 상황에 더 간단히 구현할 방법은 
두번째 방법이라 판단이 되어 두번째 방법으로 진행하게 되었습니다.

그럼 위치정보수집 기술에 대한 설명 시작하겠습니다.

먼저 클라이언트가 현재위치로 찾기 버튼을 클릭하게 된다면
현재 클라이언트의 IP를 받아오기 위해 비동기 방식으로 api 요청을 통해
공인아이피를 가져와 변수에 저장후,
비동기 방식으로 서버에 get방식으로 공인아이피를 넘겨줍니다.

이후 서버에서는 컨트롤러로 요청이들어오게 되고,
해당 컨트롤러에서는 공인아이피를 좌표로 변환하기 위한 API 요청을 위해 properties 파일에 숨겨둔
API키를 @propertysource 와 @value 를 사용해 가져옵니다.
이후 key과 아이피를 사용해 api요청을 보내고 현재좌표정보에 대한 데이터를 JSON형식으로 받습니다.
이 데이터중 실제 필요한 정보인 좌표에 대한 데이터만 리턴해주기 위해
jsonParser 객체를 사용해 데이터를 파싱해주고 jsonObject 객체로 변환해 좌표에 대한 값만 추출해
리턴해주었습니다.

다시 클라이언트에서는 비동기 방식의 성공결과 함수의 인자값으로 해당 좌표를 받아서
현재 좌표를 통해 얻어낼수 있는 주소를 지도의 중심좌표로 잡아줍니다.

다음은 회원가입 화면입니다.

회원가입시에는 회원의 이메일을 아이디로 받도록하고 가입시 이메일 인증을 받도록 구현했습니다.
또 아이디와 닉네임의 경우 중복체크를 비동기 방식으로 구현했습니다.
로그인화면의 경우는 정규식을 사용해 이메일 주소의 형식을 받을수 있도록했고
로그인 버튼 클릭시 동기방식을 사용해 회원의 정보를 확인할수 있도록 구현했습니다.

회원가입화면에서 소개해드릴 주요 기술은 smtp 프로토콜을 사용한 이메일 인증기술 입니다.

클라이언트에서 회원가입시 메일인증 요청이 발생하는경우
비동기방식으로 현재 클라이언트에서 작성한 이메일 데이터를 서버로 넘겨줍니다.

이후 현재 넘어온 데이터가 중복이되는 아이디인가 DB를 통해 확인을합니다
이때 중복이된다면 바로 false를 리턴시켜 중복되는 아이디임을 클라이언트에게 보여줍니다.
중복이 되지않는다면
JavaMailSenderImpl 객체를 주입받은 클래스인 MailSendService로 아이디를 넘겨줍니다.
이 클래스에서는 메일보낼 양식를 만드는 method, 인증번호로 사용할 난수를 생성하는 method,
메일을 전송하는 method를 거쳐 이 인증번호를 
클라이언트로 넘겨줍니다.

클라이언트에서는 비동기 방식의 성공 함수 인자값으로 인증번호를받으면
인증번호가 발생되었습니다라는 alert 창을 띄워주고
새로 입력받은 인증번호가 일치한다면 일치합니다 화면을 보여줍니다.

다음은 리뷰 게시판 화면입니다.

리뷰게시판은 select 태그를 사용해 동기방식으로 정렬기준에 대한 정렬를 시킬수 있도록 했고
그 안에서 현재 정렬기준에 대한 변수의 값에 따라 
새로 화면이 만들어질때 해당 정렬기준으로 고정시킬수 있도록 구현했습니다.
페이징은 한페이지에 게시글 12개, 페이지 번호는 5개단위로 보여질수 있도록 구현했습니다.
리뷰작성하기 화면에서는 세션을통해 현재 클라이언트의 아이디정보를 받아와 readonly로 고정시켜두고
주소검색은 kakao 주소 api를 통해 입력받도록 했습니다.
또한 입력받은 게시글의 내용에 따라 긍정적인글인지 부정적인 글인지 혹은 중립인지에 대한
인공지능의 분석결과도 같이 저장할수 있게 구현했습니다.
그리고 리뷰 상세보기 화면입니다.
리뷰 상세보기 화면에서 소개해드릴 주요 기술은 댓글의 비동기방식 처리입니다.
먼저 댓글이 입력되어 등록버튼을 클릭하거나 댓글의 좋아요버튼을 클릭할시 비동기방식으로
클라이언트의 요청이 일어납니다
이때 두가지 경우 모두 json 형식의 데이터로 파라미터를 넘겨줍니다.
컨트롤러에서는 받은 데이터를 vo를 통해 매핑을 시켜 받은값으로 서비스단,dao단을 거치게 되고
응답을 해줍니다
응답을 받는 클라이언트에서는 다시 댓글리스트를 업데이트해주기 위해
댓글리스트 함수를 호출시켜 비동기 방식으로 댓글 리스트 요청을 합니다.
이후 서버에서는 서비스단,dao단을 거쳐 현재 댓글 페이지의 페이징 정보와, 댓글의 데이터, 그리고 현재 회원이
현재 댓글 페이지의 좋아요누른 댓글의 데이터를 가져와 hashmap으로 응답해줍니다.
클라이언트에서 응답을 받으면 받은 데이터를 통해 댓글 테이블을 생성해
화면으로 보여주게 됩니다.

다음은 마이페이지 화면입니다.

마이페이지 화면에서는 공인중개사 등록번호가 등록된 회원의 경우 매물 게시글 관리 아이콘을
등록되지 않은 회원의 경우 등록하기 아이콘을 보여주고 회원이작성한 게시글, 댓글을 관리할수 있습니다.

마이페이지화면에서 소개해드릴 기술은 공인중개사 등록번호 확인 API 요청입니다.
회원이 마이페이지 화면에서 등록번호 입력후 등록버튼 클릭시 요청이 발생하게됩니다.

요청은 비동기 방식으로 회원의 이름과, 회원이 입력한 등록번호를 json 형식으로 넘겨줍니다
서버에서는 요청이 발생하면 properties 파일에 숨겨놓은 키를 @propertysource , @value 를 사용해
가져와 api 요청 형식에 맞춰 url을 가공후 요청을합니다. 
이후 응답받은 json 데이터를 파싱후 jsonObject로 응답해줍니다.

응답받은 클라이언트는 데이터의 숫자를 의미하는 변수인 totalCount의 값이 1이면
의미있는 데이터로 판단하고 동기방식으로 DB에 저장하고
아닌경우 유효한 등록번호가 아닙니다 라는 alert 창을 띄워줍니다.

다음은 검색,매물리스트 화면입니다.
검색기능은 비회원이여도 사용이 가능할수 있도록 요청시 인터셉터에서 거르지 않도록 구현했습니다.
검색키워드에 해당하는 단어가 매물의 주소에 포함이된다면 모두 리스트로 나올수 있도록 구현을 했고,
매물리스트에서 상세보기 화면으로 넘어가면 현재의 매물위치는 지도에서 파란핀으로,
주변의 대형마트 위치는 빨간핀으로 표기했습니다. 또 매물의 사진들과 정보들, 그리고
매물의 법정동주소에 해당하는 동네의 리뷰가 있다면 그 리뷰들의 내용를 인공지능으로 분석해
긍정적인지, 부정적인지, 중립인지에 대한 piechart를 보여줍니다.

매물 상세보기 화면에서 소개해드릴 기술은 동네평가 시각화 기술입니다.
상세보기 화면의 요청이 있고 화면이 로딩될때 javascript에서
구글 차트 라이브러리 로딩을 하고 로딩이 완료되면 drawchart 함수를 호출하고
이 함수는 동기식으로 현재의 매물의 기본키인 매물번호를 파라미터로 서버에 넘겨줍니다.
이후 서버에서는 차트를 그리기 위해 필요한 데이터인 현재매물의 법정동주소를 갖는 게시글들의 평가를 가져옵니다
그리고 가져온 평가데이터를 구글차트를 그리기 위한 데이터로 가공해줍니다
가공된 jsonObject 객체를 클라이언트에게 응답해주면
응답받은 클라이언트는 piechart로 만들어 화면에 보여줍니다.

다음은 매물 상세보기 화면의 대형마트 위치를 가공하는 기술의 흐름만 소개하고 넘어가겠습니다.
공공데이터인 대형마트정보csv 파일 중 의미있는 데이터만 가져오기 위해 파이썬을 사용했고
이를 DB에 바로 저장후 kakao api를 사용한 맵을 사용해야 하므로 좌표를 변환하기위한 api 요청후 응답받은
좌표를 DB에 저장했습니다.

다음은 매물등록화면입니다
매물등록화면에서는 kakao 주소 api를 사용해 주소를 입력받도록했고,
이미지파일을 10개까지 저장가능하고 파일명을 보고 취소할수 있도록 구현했습니다.

다음은 시연영상인데 시간상의 이유로 넘어가도록 하겠습니다

이번 프로젝트를 통해 느낀점은
git을 사용한 분업은 매우 편리하다는 점
그리고 초반 interface설계가 아주 중요하다는것을 느꼈습니다.

또 개념적으로 알고있던 부분이나 새로 알게된 부분들을
직접 구현해보고 익숙해져서 흐름적으로 더 잘 이해할수 있던 기회가 됐습니다.

추가하고 싶은 기능으로는 쿠키를 사용한 로그인유지기능, 
매물등록자의 연락처를 안전번호로 바꾸어 게시하는 기능을 만들어보고 싶습니다.

지금 부턴 질문을 받도록하겠습니다


이상으로 발표를 마치겠습니다.